// ####################################################################################################
// ## IMPORTACIÓNS
// ####################################################################################################
import HttpStatus from 'http-status-codes';
import got from 'got';

// ####################################################################################################
// ## CLASE ProjectService
// ####################################################################################################
export class ApiPersistenceService {
  // ************************************************************************************************
  // ** ATRIBUTOS
  // ************************************************************************************************

  // ************************************************************************************************
  // ** CONSTRUTOR
  // ************************************************************************************************
  constructor() { }

  // ************************************************************************************************
  // ** MÉTODOS CONEXIÓN BD
  // ************************************************************************************************

  // ************************************************************************************************
  // ** MÉTODOS CRUD (READ)
  // ************************************************************************************************
  // ------------------------------------------------------------------------------------------------
  // -- GET
  // ------------------------------------------------------------------------------------------------
  public async login(uri: string): Promise<any> {
    let result : any = HttpStatus.FORBIDDEN;

    try {
      result = await got(uri);
      console.log(result.body);
    } catch (error) {
      result = error.response.body;
    }

    return result;
  }
  public async logout(uri: string): Promise<any> {
    let result : any = HttpStatus.FORBIDDEN;

    try {
      result = await got(uri);
      console.log(result.body);
    } catch (error) {
      result = null;
    }

    return result;
  }
}
